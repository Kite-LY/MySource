<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.kiteYY.dao.UserDao">




    <!--配置查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="user">
        <!--主字段名进行对应-->
        <id property="userId" column="id"></id>
        <!--配置其他非字段名-->
        <result property="userName" column="username"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
        <result property="userAddress" column="address"></result>
    </resultMap>

    <!--抽取重复的sql语句-->
    <sql id="defaultFindAll">
        select * from user
    </sql>

    <select id="findAll" resultMap="userMap">
        <include refid="defaultFindAll"></include>
    </select>

    <!--

    foreach元素的属性主要有 item，index，collection，open，separator，close。

    item表示集合中每一个元素进行迭代时的别名，
    index指 定一个名字，用于表示在迭代过程中，每次迭代到的位置，
    open表示该语句以什么开始，
    separator表示在每次进行迭代之间以什么符号作为分隔符，
    close表示以什么结束。
    -->
    <select id="findInIds" resultMap="userMap" parameterType="queryVo">
        <include refid="defaultFindAll"></include>
        <where>
        <if test="ids != null and ids.size() > 0">
          <foreach collection="ids" open="and id in (" close=")" item = "ids" separator=",">
            #{ids}
          </foreach>
        </if>
        </where>
    </select>


    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        <include refid="defaultFindAll"></include>
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>


    </select>


    <select id="findById" parameterType="INT" resultMap="userMap">
        <include refid="defaultFindAll"></include> where id=#{userid};
    </select>

    <select id="findByName" parameterType="java.lang.String" resultType="com.kiteYY.domain.User">
        <include refid="defaultFindAll"></include> where username like #{userName};
    </select>

    <select id="findTotal" resultType="Integer">
        select count(id) from user;
    </select>

    <select id="findUserByVo" parameterType="com.kiteYY.domain.QueryVo" resultType="com.kiteYY.domain.User">
        <include refid="defaultFindAll"></include> where username like #{user.userName};
    </select>
</mapper>

