<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.kiteYY.dao.UserDao">




    <!--配置查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="com.kiteYY.domain.User">
        <!--主字段名进行对应-->
        <id property="userId" column="id"></id>
        <!--配置其他非字段名-->
        <result property="userName" column="username"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
        <result property="userAddress" column="address"></result>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>


    <insert id="saveUser" parameterType="com.kiteYY.domain.User">
--    获取存入数据后的id值
    <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
        select last_insert_id();
    </selectKey>
        insert into user(username,birthday,sex,address)
        values (#{username},#{birthday},#{sex},#{address});
    </insert>

    <update id="upDateUser" parameterType="com.kiteYY.domain.User">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id};
    </update>

    <update id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{userId}
    </update>

    <select id="findById" parameterType="INT" resultType="User">
        select *from user where id=#{userid};
    </select>

    <select id="findByName" parameterType="java.lang.String" resultType="com.kiteYY.domain.User">
        select * from user where username like #{username};
    </select>

    <select id="findTotal" resultType="Integer">
        select count(id) from user;
    </select>

    <select id="findUserByVo" parameterType="com.kiteYY.domain.QueryVo" resultType="com.kiteYY.domain.User">
        select * from user where username like #{user.username};
    </select>
</mapper>

