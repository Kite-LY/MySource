<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置业务层-->
    <bean id="accountService" class="cn.kitey.service.impl.accountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>


    <!--配置持久层-->
    <bean id = "accountDao" class="cn.kitey.dao.impl.AccountDaoImpl">
       <property name="dataSource" ref="dataSource"></property>
    </bean>



    <!--配置数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql:///eesy?characterEncoding=utf8"></property>
        <property name="username" value="root"></property>
        <property name="password" value="25002500"></property>
    </bean>

    <!--
    spring 中基于xml的声明式事务控制步骤
    1.配置事务管理器
    2.配置事务通知（这时需导入事务的约束）
            使用tx:advice标签配置事务通知
            属性
                id:给事务为一个标识
                transaction-manager：给事务通知提供一个事务管理器引用
    3.配置AOP中的通用切入点表达式
    4.建立事务通知和契入点表达式之间的关系
    5.配置事务的属性
    -->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--
            属性
            isolation=""：用于指定事务的隔离级别，默认值为DEFAULT,表示数据库的默认隔离级别

            propagation=""：用于指定事务的传播行为，默认值是REQUIRED，表示一定有事务，增删改的选择。 查询为：SUPPORTS

            read-only="":指定事务只读，只有查询方法才能设置为true，默认值为false，可进行读写

            timeout=""：指定事务的超时时间，默认值为-1，表示永不超时，指定了数值的话单位为秒

            rollback-for="":用于指定一个异常，当产生异常的时候，事务回滚，产生其他异常事务不进行回滚。无默认值

            no-rollback-for=""：用于指定一个异常，产生该异常时，不进行回滚，产生其他异常时进行回滚

        -->
        <tx:attributes>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!--配置AOP-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* cn.kitey.service.impl.*.*(..))"></aop:pointcut>

        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>


</beans>